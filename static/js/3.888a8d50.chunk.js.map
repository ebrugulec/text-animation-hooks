{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/TreeComponent.js","components/TextAnimation.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","TreeComponent","react_default","a","createElement","viewBox","class","d","TextAnimation","_ref","textColor","overlayColor","text","containerRef","useRef","_useState2","useState","x","y","mousePos","setMousePos","className","style","--maskX","--maskY","onMouseMove","event","nativeEvent","elem","current","newX","offsetX","clientWidth","newY","offsetY","clientHeight","onMouseOut","ref","color","components_TreeComponent"],"mappings":"yFAGe,SAAAA,EAAAC,EAAAC,GACf,OCJe,SAAAD,GACf,GAAAE,MAAAC,QAAAH,GAAA,OAAAA,EDGSI,CAAcJ,IEJR,SAAAA,EAAAC,GACf,IAAAI,EAAA,GACAC,GAAA,EACAC,GAAA,EACAC,OAAAC,EAEA,IACA,QAAAC,EAAAC,EAAAX,EAAAY,OAAAC,cAA6CP,GAAAI,EAAAC,EAAAG,QAAAC,QAC7CV,EAAAW,KAAAN,EAAAO,QAEAhB,GAAAI,EAAAa,SAAAjB,GAH4EK,GAAA,IAKzE,MAAAa,GACHZ,GAAA,EACAC,EAAAW,EACG,QACH,IACAb,GAAA,MAAAK,EAAA,QAAAA,EAAA,SACK,QACL,GAAAJ,EAAA,MAAAC,GAIA,OAAAH,EFnBgCe,CAAoBpB,EAAAC,IGJrC,WACf,UAAAoB,UAAA,wDHGgEC,8BIiBjDC,EAnBO,WAClB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,QAAQ,eACTH,EAAAC,EAAAC,cAAA,QAAME,MAAM,SAASC,EAAE,sYACvBL,EAAAC,EAAAC,cAAA,QAAME,MAAM,SAASC,EAAE,2bACvBL,EAAAC,EAAAC,cAAA,QAAME,MAAM,SAASC,EAAE,4hBACvBL,EAAAC,EAAAC,cAAA,QAAME,MAAM,SAASC,EAAE,4bACvBL,EAAAC,EAAAC,cAAA,QAAME,MAAM,SAASC,EAAE,gbACvBL,EAAAC,EAAAC,cAAA,QAAME,MAAM,SAASC,EAAE,+nBACvBL,EAAAC,EAAAC,cAAA,QAAME,MAAM,SAASC,EAAE,2qBACvBL,EAAAC,EAAAC,cAAA,QAAME,MAAM,SAASC,EAAE,yYACvBL,EAAAC,EAAAC,cAAA,QAAME,MAAM,SAASC,EAAE,+cACvBL,EAAAC,EAAAC,cAAA,QAAME,MAAM,UAAUC,EAAE,+ZACxBL,EAAAC,EAAAC,cAAA,QAAME,MAAM,UAAUC,EAAE,+cACxBL,EAAAC,EAAAC,cAAA,QAAME,MAAM,OAAOC,EAAE,yXC6BlBC,UA1CO,SAAAC,GAAuC,IAApCC,EAAoCD,EAApCC,UAAWC,EAAyBF,EAAzBE,aAAcC,EAAWH,EAAXG,KACxCC,EAAeC,iBAAO,MAD6BC,EAAAtC,EAEzBuC,mBAAS,CAACC,EAAG,EAAGC,EAAG,IAFM,GAElDC,EAFkDJ,EAAA,GAExCK,EAFwCL,EAAA,GAczD,OACIb,EAAAC,EAAAC,cAAA,WACIiB,UAAU,wBACVC,MAAO,CACHC,UAAWJ,EAASF,EACpBO,UAAWL,EAASD,GAExBO,YAjBgB,SAAAC,GACpBA,EAAQA,EAAMC,YACd,IAAMC,EAAOf,EAAagB,QACpBC,EAAQJ,EAAMK,QAAUH,EAAKI,YAAe,IAC5CC,EAAQP,EAAMQ,QAAUN,EAAKO,aAAgB,IACnDf,EAAY,CAACH,EAAGa,EAAMZ,EAAGe,KAarBG,WAVe,kBAAMhB,EAAY,CAACH,EAAG,EAAGC,EAAG,KAW3CmB,IAAKxB,GAELX,EAAAC,EAAAC,cAAA,MACIkB,MAAO,CAAEgB,MAAO5B,GAChBW,UAAU,uBAETT,GAELV,EAAAC,EAAAC,cAAA,MACIkB,MAAO,CAAEgB,MAAO3B,GAChBU,UAAU,4BAETT,GAELV,EAAAC,EAAAC,cAACmC,EAAD","file":"static/js/3.888a8d50.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react'\r\n\r\nconst TreeComponent = () => {\r\n    return(\r\n        <svg viewBox=\"0 0 512 512\">\r\n            <path class=\"leaf-1\" d=\" M 240.12 34.99 C 241.08 22.04 249.66 11.35 257.93 1.99 C 261.59 11.36 265.11 20.78 268.82 30.12 C 271.22 35.32 273.46 41.17 271.93 46.94 C 269.70 54.04 263.92 59.74 257.02 62.37 C 259.40 57.62 261.93 52.49 261.42 47.03 C 260.48 40.78 257.77 34.98 255.00 29.37 C 256.24 35.53 257.87 41.70 257.81 48.04 C 257.54 52.95 255.94 57.78 253.31 61.93 C 246.80 54.31 240.70 45.28 240.12 34.99 Z\" />\r\n            <path class=\"leaf-2\" d=\" M 301.16 45.20 C 317.65 33.17 337.69 27.34 357.44 23.27 C 352.38 42.50 347.08 61.67 342.04 80.89 C 340.14 91.56 336.57 102.82 328.02 110.05 C 316.34 118.78 300.78 121.95 286.58 118.70 C 295.43 114.05 304.61 108.87 310.47 100.51 C 316.93 88.96 319.43 75.71 321.41 62.77 C 316.71 74.68 311.72 86.66 304.19 97.09 C 297.90 104.35 290.11 110.60 281.06 114.03 C 278.95 97.32 279.60 79.78 285.95 64.00 C 288.64 56.19 294.69 50.08 301.16 45.20 Z\" />\r\n            <path class=\"leaf-3\" d=\" M 163.04 37.09 C 185.85 44.90 208.39 54.58 227.68 69.27 C 238.21 77.46 248.09 87.34 253.22 99.88 C 261.44 124.23 259.73 150.75 253.79 175.41 C 241.83 169.27 232.30 159.20 224.73 148.26 C 215.95 132.32 210.67 114.72 206.31 97.13 C 206.80 114.13 208.17 131.39 213.69 147.59 C 215.51 153.40 219.27 158.30 223.31 162.73 C 229.82 169.74 237.41 175.66 245.42 180.84 C 229.41 182.42 212.96 178.29 199.54 169.45 C 194.65 166.10 189.75 162.52 186.36 157.56 C 178.43 146.38 175.84 132.43 175.09 118.99 C 171.12 91.68 167.05 64.39 163.04 37.09 Z\" />\r\n            <path class=\"leaf-4\" d=\" M 94.21 47.43 C 105.91 51.41 117.43 56.31 127.71 63.25 C 135.08 68.41 142.20 74.69 145.89 83.08 C 150.84 97.21 149.81 112.68 146.42 127.04 C 139.54 123.46 133.99 117.71 129.66 111.36 C 124.63 102.35 121.78 92.34 119.08 82.43 C 119.55 92.72 120.26 103.27 124.14 112.92 C 127.91 120.33 134.83 125.46 141.51 130.09 C 130.01 131.28 118.11 127.19 109.73 119.25 C 103.31 112.55 101.66 102.92 101.02 94.02 C 98.81 78.48 96.45 62.97 94.21 47.43 Z\" />\r\n            <path class=\"leaf-5\" d=\" M 374.05 59.04 C 377.59 55.75 382.45 54.40 387.11 53.66 C 396.03 52.39 405.08 53.63 413.83 55.42 C 407.64 63.36 401.32 71.20 395.18 79.18 C 392.08 83.70 388.38 88.34 382.96 90.08 C 375.73 92.05 367.86 89.86 362.08 85.27 C 367.50 84.78 373.50 84.43 377.86 80.78 C 382.46 76.74 385.99 71.67 389.25 66.53 C 384.67 70.90 380.12 75.43 374.63 78.65 C 370.35 80.89 365.48 81.97 360.65 81.85 C 363.38 73.42 367.51 65.16 374.05 59.04 Z\" />\r\n            <path class=\"leaf-6\" d=\" M 342.78 125.77 C 367.53 113.82 394.22 106.41 421.08 100.96 C 411.44 137.00 401.66 173.00 392.06 209.05 C 389.80 222.78 385.76 236.43 378.41 248.34 C 373.44 256.48 366.59 263.65 358.06 268.08 C 337.43 280.33 312.04 284.30 288.69 278.73 C 303.41 271.70 317.63 262.94 328.82 250.93 C 333.82 245.78 336.72 239.10 339.50 232.60 C 347.04 213.75 351.15 193.71 353.93 173.66 C 345.41 196.54 335.49 219.24 321.16 239.13 C 309.32 252.29 295.12 264.05 278.28 270.09 C 275.38 245.85 275.56 220.99 281.06 197.12 C 282.81 189.03 286.03 181.40 288.76 173.62 C 291.97 165.83 297.24 159.07 303.06 153.06 C 314.41 141.52 328.34 132.89 342.78 125.77 Z\" />\r\n            <path class=\"leaf-7\" d=\" M 109.56 163.09 C 131.04 167.41 152.32 173.10 172.71 181.20 C 189.52 188.01 205.87 196.48 219.89 208.10 C 230.38 216.95 239.99 227.82 243.84 241.28 C 249.55 255.14 252.34 270.03 253.53 284.93 C 254.72 300.68 254.36 316.56 252.35 332.23 C 235.58 326.20 221.44 314.50 209.62 301.43 C 195.35 281.73 185.51 259.21 176.99 236.54 C 179.36 256.17 183.73 275.68 190.91 294.13 C 193.75 300.87 196.73 307.80 201.88 313.12 C 213.08 325.10 227.26 333.90 242.00 340.86 C 221.92 345.66 200.37 343.38 181.58 334.92 C 177.78 333.34 174.26 331.18 170.68 329.17 C 165.09 326.02 160.61 321.39 156.29 316.72 C 146.18 303.07 140.91 286.55 138.26 269.93 C 128.76 234.30 119.12 198.71 109.56 163.09 Z\" />\r\n            <path class=\"leaf-8\" d=\" M 49.98 199.95 C 62.18 197.57 75.92 195.50 87.33 201.71 C 95.48 207.57 99.98 217.11 103.20 226.34 C 98.04 226.49 92.81 225.28 88.33 222.69 C 83.23 219.39 78.83 215.15 74.49 210.94 C 78.03 216.43 81.75 222.02 86.96 226.08 C 91.29 228.97 96.69 229.40 101.74 229.76 C 96.04 234.38 88.25 236.45 81.07 234.67 C 75.70 233.04 71.95 228.51 68.90 224.05 C 62.68 215.95 56.25 208.01 49.98 199.95 Z\" />\r\n            <path class=\"leaf-9\" d=\" M 421.43 217.40 C 425.19 213.50 430.66 211.91 435.88 211.19 C 444.61 210.18 453.46 211.18 461.99 213.10 C 455.73 221.10 449.36 229.02 443.16 237.07 C 440.05 241.61 436.25 246.26 430.76 247.87 C 423.59 249.56 415.86 247.52 410.18 242.91 C 415.06 242.49 420.24 242.12 424.52 239.49 C 429.78 235.57 433.59 230.07 437.08 224.59 C 432.63 228.72 428.28 233.05 423.05 236.19 C 418.67 238.54 413.67 239.65 408.72 239.50 C 411.43 231.42 415.28 223.45 421.43 217.40 Z\" />\r\n            <path class=\"leaf-10\" d=\" M 73.24 279.89 C 94.02 272.77 116.16 267.03 138.26 269.93 C 140.91 286.55 146.18 303.07 156.29 316.72 C 145.78 311.46 136.46 304.20 127.18 297.05 C 135.14 306.94 143.69 316.63 154.24 323.83 C 159.05 327.26 164.98 328.28 170.68 329.17 C 174.26 331.18 177.78 333.34 181.58 334.92 C 171.45 341.45 159.10 344.53 147.09 343.38 C 135.29 341.73 125.77 333.44 118.33 324.66 C 103.38 309.66 88.21 294.87 73.24 279.89 Z\" />\r\n            <path class=\"leaf-11\" d=\" M 377.93 288.87 C 383.82 284.56 390.46 280.51 398.01 280.53 C 414.90 280.10 430.73 287.54 445.16 295.57 C 433.09 304.04 420.89 312.31 408.85 320.81 C 402.67 325.87 395.32 330.56 387.04 330.47 C 376.26 329.74 366.08 323.74 359.94 314.87 C 368.26 316.92 377.69 318.91 385.70 314.78 C 393.27 311.04 399.97 305.77 406.28 300.21 C 397.95 304.63 389.43 309.00 380.21 311.22 C 373.20 312.32 365.82 311.96 359.12 309.49 C 364.34 301.76 370.57 294.64 377.93 288.87 Z\" />\r\n            <path class=\"tree\" d=\" M 274.84 371.94 C 286.92 347.78 298.93 323.59 311.00 299.43 C 310.69 330.71 311.90 362.01 314.83 393.15 C 317.13 416.52 320.33 439.89 326.19 462.66 C 330.66 479.23 336.13 496.11 346.83 509.81 C 301.06 509.84 255.29 509.96 209.53 510.00 C 223.59 495.41 233.56 477.20 240.00 458.08 C 249.27 430.45 250.21 400.48 244.99 371.94 C 254.94 371.93 264.89 371.93 274.84 371.94 Z\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default TreeComponent","import React, { useState, useRef } from 'react'\r\nimport TreeComponent from './TreeComponent'\r\n\r\nconst TextAnimation = ({ textColor, overlayColor, text }) => {\r\n    const containerRef = useRef(null);\r\n    const [mousePos, setMousePos] = useState({x: 0, y: 0});\r\n\r\n    const handleMouseMove = event => {\r\n        event = event.nativeEvent;\r\n        const elem = containerRef.current;\r\n        const newX = (event.offsetX / elem.clientWidth) * 100;\r\n        const newY = (event.offsetY / elem.clientHeight) * 100;\r\n        setMousePos({x: newX, y: newY});\r\n    };\r\n\r\n    const handleMouseOut = () => setMousePos({x: 0, y: 0});\r\n\r\n    return (\r\n        <section\r\n            className='animatedTextContainer'\r\n            style={{\r\n                \"--maskX\": mousePos.x,\r\n                \"--maskY\": mousePos.y\r\n            }}\r\n            onMouseMove={handleMouseMove}\r\n            onMouseOut={handleMouseOut}\r\n            ref={containerRef}\r\n        >\r\n            <h1\r\n                style={{ color: textColor }}\r\n                className='animatedTextContent'\r\n            >\r\n                {text}\r\n            </h1>\r\n            <h1\r\n                style={{ color: overlayColor }}\r\n                className='animatedTextContentClone'\r\n            >\r\n                {text}\r\n            </h1>\r\n            <TreeComponent />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default TextAnimation"],"sourceRoot":""}